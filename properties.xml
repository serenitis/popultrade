<?xml version="1.0" encoding="UTF-8"?>
<project>
    <!-- Library versions and JARs -->
    <property name="lib.dir" location="lib"/>
    <property file="${lib.dir}/lib.properties"/>
    
    <!-- Load user overrides -->
    <property file="${user.home}/.${ant.project.name}-build.properties"/>
    <property file="${user.home}/.build.properties"/>
    <property file="build.properties"/>
    
    <!-- Application options that will likely vary between applications -->
    <property name="http.port" value="9999"/>
    <property name="dao.type" value="hibernate"/>
    <property name="jsp.2" value="false"/>
    <property name="jsp.precompile" value="false"/>
    
    <!-- Properties for running unit tests with tomcat -->
    <property name="tomcat.server" value="localhost"/>
    <property name="tomcat.manager.url" value="http://${tomcat.server}:${http.port}/manager"/>
    <property name="tomcat.username" value="admin"/>
    <property name="tomcat.password" value="admin"/>

    <!-- Defaults for database.properties -->
    <property name="database.jar" location="${mysql.jar}"/>
    <property name="database.type" value="postgres"/>
    <property name="database.name" value="popultrade"/>
    <property name="database.host" value="localhost"/>
    <property name="database.username" value="postgres"/>
    <property name="database.password" value="aaaa"/>
    
    <!-- database URL for creating other dbs - used in db-create target -->
    <property name="database.admin.url" value="jdbc:${database.type}://${database.host}/mysql"/>
    <property name="database.admin.username" value="root"/>
    <property name="database.admin.password" value=""/>
    <property name="hibernate.dialect" value="org.hibernate.dialect.MySQLInnoDBDialect"/>
    <property name="database.driver_class" value="com.mysql.jdbc.Driver"/>
    <property name="database.url" 
        value="jdbc:${database.type}://${database.host}/${database.name}?useUnicode=true&amp;amp;characterEncoding=utf-8"/>
    <property name="database.show_sql" value="true"/>
    
    <!-- Build and deploy properties -->
    <property environment="env"/>
    <property name="env.COMPUTERNAME" value="${env.HOSTNAME}"/>

    <property name="tomcat.home" value="c:/tomcat8/"/>    
    <!-- The target directory for building the packed web application -->
    <property name="webapp.dist" value="${dist.dir}/webapps"/>    
    <!-- The target directory for building the unpacked web application -->
    <property name="webapp.target" value="${build.dir}/${webapp.name}"/>    
    <!-- Should Java compilations set the debug compiler option? -->
    <property name="compile.debug" value="true"/>
    <!-- Should Java compilations set the deprecation compiler option? -->
    <property name="compile.deprecation" value="false"/>
    <!-- Should Java compilations set the optimize compiler option? -->
    <property name="compile.optimize" value="false"/>
    <!-- The source directory for the whole project -->
    <property name="src" value="${basedir}/src"/>
    <property name="tar.user" value="ant"/>
    <property name="tar.group" value="ant"/>
    <property name="tar.mode" value="644"/>
    
    <!-- =================================================================== -->
    <!-- Classpaths                                                          -->
    <!-- =================================================================== -->
    
    <path id="xdoclet.classpath">
        <pathelement location="${log4j.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-collections.jar}"/>
        <fileset dir="${spring.dir}" includes="acegi*.jar"/>
        <fileset dir="${xdoclet.dir}" includes="*.jar"/>
        <fileset dir="${velocity.dir}" includes="*.jar"/>
    </path>
    
    <!-- Hibernate -->
    <path id="hibernate.classpath">
        <pathelement location="${hibernate.jar}"/>
    	<pathelement location="${hibernatejpa.jar}"/>
    	<pathelement location="${hibernatebeanlib.jar}"/>
    	<pathelement location="${hibernatebeanlibapi.jar}"/>
    	<pathelement location="${hibernatec3p0.jar}"/>
    	<pathelement location="${hibernateentitymanager.jar}"/>
    	<pathelement location="${hibernatetrm.jar}"/>
        <fileset dir="${hibernate.dir}" includes="*.jar"/>
        <pathelement location="${database.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-lang.jar}"/>
    	 <fileset dir="${slf4j.dir}" includes="*.jar"/>
        <path location="${build.dir}/dao/classes"/>
    	<pathelement location="${postgresql.jar}"/>
    </path>
    
    <!-- DAO -->
    <path id="dao.compile.classpath">
        <path refid="hibernate.classpath"/>
    	<pathelement location="${ojdbc6.jar}"/>
        <pathelement location="${commons-lang.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <fileset dir="${servletapi.dir}" includes="*.jar"/>
        <fileset dir="${spring.dir}" includes="*.jar"/>
    </path>
    <path id="dao.test.classpath">
        <path refid="dao.compile.classpath"/>
        <pathelement location="${dbunit.jar}"/>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${commons-collections.jar}"/>
        <pathelement location="${log4j.jar}"/>
    </path>
    
    <!-- Service -->
    <path id="service.compile.classpath">
        <path refid="dao.compile.classpath"/>
        <pathelement location="${dist.dir}/${webapp.name}-dao.jar"/>
        <fileset dir="${javamail.dir}" includes="*.jar"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-collections.jar}"/>
        <fileset dir="${spring.dir}" includes="*.jar"/>
        <fileset dir="${velocity.dir}" includes="*.jar"/>
    </path>
    <path id="service.test.classpath">
        <path refid="service.compile.classpath"/>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${log4j.jar}"/>
        <pathelement location="${jakarta-oro.jar}"/>
        <pathelement location="${dumbster.jar}"/>
        <pathelement location="${jmock.jar}"/>
        <path location="test/dao"/>
    </path>
        
    <!-- Web -->
    <path id="web.compile.classpath">
    	<pathelement location="${postgresql.jar}"/>
        <pathelement location="${dist.dir}/${webapp.name}-dao.jar"/>
        <pathelement location="${dist.dir}/${webapp.name}-service.jar"/>
<pathelement location="${struts.jar}"/>
        <pathelement location="${strutsmenu.jar}"/>
        <pathelement location="${displaytag.jar}"/>
        <pathelement location="${jakarta-oro.jar}"/>
    	<pathelement location="${commons-io.jar}"/>
        <pathelement location="${commons-digester.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/> 
        <pathelement location="${commons-collections.jar}"/>
        <pathelement location="${commons-fileupload.jar}"/>
        <pathelement location="${commons-lang.jar}"/>
        <pathelement location="${commons-validator.jar}"/>
        <pathelement location="${commons-net.jar}"/>
    	<pathelement location="${hibernatetrm.jar}"/>
    	<pathelement location="${fop.jar}"/>
    	<pathelement location="${xmlgraphics-commons-1.5.jar}"/>
    	<pathelement location="${hibernatebeanlib.jar}"/>
    	<pathelement location="${hibernateentitymanager.jar}"/>
    	<pathelement location="${hibernatebeanlibapi.jar}"/>
    	<pathelement location="${hibernatejpa.jar}"/>
    	<pathelement location="${jxl.jar}"/>
    	<pathelement location="${jericho-html-3.1.jar}"/>
    	
    	<pathelement location="${barcode4j.jar}"/>
    	<pathelement location="${barcode4j-light.jar}"/>
    	<pathelement location="${barcode4j-xgc.jar}"/>
    	<pathelement location="${ojdbc14-9.2.0.5.jar}"/>
    	<pathelement location="${websocket.jar}"/>
    	<pathelement location="${gson.jar}"/>
    	<pathelement location="${json.jar}"/>
    	<pathelement location="${jbcrypt.jar}"/>
    	
    	
    	<pathelement location="${barcode4j-fop-ext-0.20.5.jar}"/>

    	
    	<pathelement location="${avalon-framework-4.1.5.jar}"/>
    	
    	  <pathelement location="${xmlsecTests-1.3.0.jar}"/>
    	        <pathelement location="${xmlsec-1.3.0.jar}"/>
    	        <pathelement location="${xmlsecSamples-1.3.0.jar}"/>
    	<pathelement location="${hibernate.jar}"/>
        <pathelement location="${servletapi.jar}"/>
        <pathelement location="${flashgateway.jar}"/>
        <pathelement location="${inetaddresslocator.jar}"/>
        <fileset dir="${javamail.dir}" includes="*.jar"/>
        <fileset dir="${spring.dir}" includes="*.jar"/>
        <fileset dir="${jstl.dir}/lib" includes="jstl.jar"/>
    </path>
    <path id="web.test.classpath">
    	
        <path refid="web.compile.classpath"/>
    	<pathelement location="${hibernatebeanlib.jar}"/>
        <pathelement location="${dumbster.jar}"/>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${strutstestcase.jar}"/>
        <fileset dir="${webtest.dir}/lib" includes="*.jar"/>
        <pathelement location="${log4j.jar}"/>
        <fileset dir="${velocity.dir}" includes="*.jar"/>
        <!-- Needed for testing out-of-container -->
        <path refid="dao.compile.classpath"/>
        <path location="test/dao"/>
    </path>
    
    <path id="jspc.classpath">
        <path refid="dao.compile.classpath"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-validator.jar}"/>
        <pathelement location="${clickstream.jar}"/>
    	<pathelement location="${postgresql.jar}"/>
        <pathelement location="${displaytag.jar}"/>
        <pathelement location="${sitemesh.jar}"/>
        <pathelement location="${strutsmenu.jar}"/>
        <fileset dir="${jstl.dir}/lib" includes="*.jar"/>
        <fileset dir="${struts.dir}" includes="*.jar"/>
        <fileset dir="${spring.dir}" includes="*.jar"/>
        <fileset dir="${tomcat.home}/common/lib" includes="*.jar"/>
        <path location="${build.dir}/web/classes"/>
    </path>
        
    <property name="inheritAll" value="true"/>
    
    <!-- this macro is called by tasks that depend on a database.properties -->
    <macrodef name="generate-database-properties">
        <sequential>
            <echo>generating database.properties from build.properties</echo>
            <propertyfile comment="Hibernate Configuration for JUnit tests" 
                file="${basedir}/database.properties">
                <entry key="hibernate.dialect" value="${hibernate.dialect}"/>
                <entry key="hibernate.connection.driver_class" value="${database.driver_class}"/>
                <entry key="hibernate.connection.url" value="${database.url}"/>
                <entry key="hibernate.connection.username" value="${database.username}"/>
                <entry key="hibernate.connection.password" value="${database.password}"/>
                <entry key="hibernate.connection.show_sql" value="${database.show_sql}"/>
                <entry key="dao.type" value="${dao.type}"/>
             </propertyfile>
             <replace file="database.properties" token="amp;" value=""/>
             <property file="database.properties"/>
         </sequential>
    </macrodef>
    
</project>
